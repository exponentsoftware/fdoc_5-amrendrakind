Explain the following questions in your own words

What is the difference between forEach, map, filter and reduce ? 
Explain these using your own words 
Explain the difference between function declaration and arrow function ? 
Explain the difference between find and findIndex ? 
If you like to filter out one object element in an array which method do you like to use: filter or find ? Explain 
Explain the difference of var, let and const when we declare a variable ?

QA. What is the difference between forEach, map, filter and reduce ?

Answer : forEach

forEach takes a callback function and run that callback function on each element of array one by one.

const array1 = ['a', 'b', 'c'];


array1.forEach(element => console.log(element));



// expected output: "a"

// expected output: "b"

// expected output: "c"

For every element on the array we are calling a callback.Basically forEach works as a  for loop looping over the array.There is no way to stop or break a forEach() loop in between other than by throwing an exception.

B. Map

Map like filter & forEach takes a callback and run it against every element on the array but it generate a new array based on your existing array.

map with an example

var arr = [1, 2, 3] // it's not gonna change

let mapped = arr.map(elem => elem * 10)
console.log(mapped);

Output as new array
[5, 10, 15]

C. Filter let you provide a callback for every element and returns a filtered array.

The main difference between forEach and filter is that forEach just loop over the array and executes the callback but filter executes the callback and check its return value. If the value is true element remains in the resulting array but if the return value is false the element will be removed for the resulting array.
var arr = [1, 2, 3] 

var result = sample.filter(elem => elem !== 2)

console.log(result)

Output as new array
[1, 3]


4. Reduce

reduce method of the array object is used to reduce the array to one single value.For example if you have to add all the elements of an array you can do something like this.

var arr = [1, 2, 3] 
var sum = arr.reduce((sum, elem) => sum + elem)
console.log(sum)

Q B. Explain the difference between function declaration and arrow function ?

Ans: Following is the ways to declare functions

//The Syntax

function soal(){
// your code inside this function
}

1. function declaration attach themselves to enclosing scope.
function soal(){
//your code
}
If you declare a function in the global scope using function declaration, The scope of the function is global. this is one of the key differences compared to function expressions

2. Function declarations are affected by hoisting.
sayHello()  // function calling
function sayHello(){
     console.log(�Hello�);
}
You can call a function before you declare it. because of hoisting.

Arrow Functions

The Syntax
()=>{}

Arrow functions do not have their own 'this' binding

Example

let user = {
	name: "GFG",
	gfg1:() => {
		console.log("hello " + this.name); // In arrow function no 'this' binding here
	},
	gfg2(){	
		console.log("Welcome to " + this.name); // 'this' binding works here
	}
};
user.gfg1();
user.gfg2();

Arguments objects are not available in arrow functions, but are available in regular functions.

Regular functions created using function declarations or expressions are �constructible� and �callable�. Since regular functions are constructible, they can be called using the �new� keyword. However, the arrow functions are only �callable� and not constructiblefetchhus, we will get a run-time error on trying to construct a non-constructible arrow functions using the new keyword.

Example using regular function:-

let x = function(){
    console.log(arguments);
};
new x =(1,2,3);

Example using arrow function:-

let x = ()=> {
    console.log(arguments);
};
new x(1,2,3);	// Type Error as x is not a constructor


Q C. Explain the difference between find and findIndex ?

Ans : The method find() is very similar to findIndex() . The only difference is that the find method returns the element value, but the findIndex method returns the element index.

Q D. If you like to filter out one object element in an array, which method do you like to use: filter or find? 

Ans: find because find returns the first matching element and filter returns an array of all matching elements.


Q E. Explain the difference of var, let and const when we declare a variable ?

Ans:Followings are the differences
 
var 

1. Variables declared with var are in the function scope.
2. Hoisting is Allowed	
3. Reassign the value is allowed
4. Redeclaration of the variable is allowed

let
 
1. Variables declared as let are in the block scope.
2. Hoisting is not allowed	
3. Reassign the value is allowed
4. Redeclaration of the variable is not allowed

const

1. Variables declared as const are in the block scope.
2. Hoisting is not allowed
3. Reassign the value is not allowed
4. Redeclaration of the variable is not allowed



